/*
Program: To implement linked list in C.
* Author: Kriston Pal
* Date: 30/07/2016
- * Ref: Data Structures. Using C and C++, Chapter 4.
*/

#include<stdio.h>
#include<stdlib.h>

struct node{
	int info;
	struct node *next;
};
typedef struct node *nodeptr;

nodeptr getnode();
void insertatfront(nodeptr*,int);
int removefromfront(nodeptr*);
void freenode(nodeptr);
void displaylist(nodeptr);

int main()
{
	nodeptr p;
	p= NULL;
	insertatfront(&p,5);
	insertatfront(&p,6);
	insertatfront(&p,7);
	insertatfront(&p,8);
	displaylist(p);
	printf("\nremoved is %d ",removefromfront(&p));
	
}

nodeptr getnode(){
	return (nodeptr) malloc(sizeof(nodeptr));
}

void freenode(nodeptr p)
{
free(p);
}

void insertatfront(nodeptr *p, int x)
{
	nodeptr q;
	q= getnode();
	q->info=x;
	q->next = *p;
	*p = q;
}

void displaylist(nodeptr p)
{
	nodeptr ptr=p;
	while(ptr !=NULL)
	{
		printf("%d", ptr->info);
		ptr =ptr->next;
	}
}

int removefromfront(nodeptr *p)
{
	nodeptr q;
	   int x;
	   if(*p== NULL)   //check whether node is available for removal or not
	   {
	   	printf("\nit is underflow case.");
	   	exit(1);
	   }else{
      	q=*p;
		*p=q->next;
		x=q->info;
		freenode(q);
		return(x);
	}

}
